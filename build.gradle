buildscript {
    repositories {
        mavenCentral()
        maven {
            url 'https://dl.bintray.com/kotlin/kotlin-eap'
        }
        maven {
            url 'http://oss.sonatype.org/content/repositories/snapshots'
        }
        jcenter()
    }
    dependencies {
        classpath 'io.spring.gradle:dependency-management-plugin:0.6.1.RELEASE'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath 'org.jetbrains.dokka:dokka-gradle-plugin:0.9.13'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.6'
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:4.1.0'
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0-RC2'
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.3'
        classpath 'org.ajoberstar:gradle-git:1.5.1'

    }
}

plugins {
    id "com.zoltu.git-versioning" version "3.0.2"
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

ZoltuGitVersioning {
    customDescribeProcessor { describeResults ->
        def matcher = (describeResults =~ /v(?<major>[0-9]+?)\.(?<minor>[0-9]+?)\.(?<patch>[0-9]+?)(?:\-(?<tags>[0-9A-Za-z\.\-]+))?\-(?<commitCount>[0-9]+?)\-g(?<sha>[a-zA-Z0-9]+)/)
        matcher.matches()
        [
            major: matcher.group('major'),
            minor: matcher.group('minor'),
            commitCount: matcher.group('commitCount'),
            sha: matcher.group('sha'),
            tags: matcher.group('tags'),
            patch: matcher.group('patch')
        ]
    }

    customVersionToString { versionInfo ->
        if (versionInfo.tags != null) {
            "${versionInfo.major}.${versionInfo.minor}.${versionInfo.patch}-${versionInfo.tags}"
        } else {
            "${versionInfo.major}.${versionInfo.minor}.${versionInfo.patch}"
        }
    }
}

afterEvaluate {
    println "##teamcity[buildNumber \'${version}\']"
    def v = version
    allprojects {
        version = v
    }
}


allprojects {
    group = 'org.jetbrains.spek'
    repositories {
        mavenCentral()
        mavenCentral()
        jcenter()
        maven {
            url 'http://repository.jetbrains.com/all'
        }
        maven {
            url 'http://oss.sonatype.org/content/repositories/snapshots'
        }
    }
    apply plugin: 'idea'
}

allprojects {
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
        outputs.cacheIf { true }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = 3.1
}


if (hasProperty('bintray_user')) {
    ext.bintrayUser = getProperty('bintray_user')
} else {
    ext.bintrayUser = ''
}

if (hasProperty('bintray_api_key')) {
    ext.bintrayApiKey = getProperty('bintray_api_key')
} else {
    ext.bintrayApiKey = ''
}

